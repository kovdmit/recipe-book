from django.db import models
from django.urls import reverse

from taggit.managers import TaggableManager
from taggit.models import TagBase


class Category(models.Model):
    slug = models.SlugField(max_length=150, unique=True, verbose_name='–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è')
    title = models.CharField(max_length=150, verbose_name='–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ')

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = '–ö–∞—Ç–µ–≥–æ—Ä–∏—è'
        verbose_name_plural = '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏'

    def get_absolute_url(self):
        return reverse('category_view', kwargs={'category_slug': self.slug})


class Recipe(models.Model):
    slug = models.SlugField(max_length=255, unique=True, verbose_name='–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è')
    title = models.CharField(max_length=255, verbose_name='–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ')
    short_desc = models.TextField(verbose_name='–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ')
    proportions = models.TextField(verbose_name='–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã')
    content = models.TextField(verbose_name='–ü–æ—à–∞–≥–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç')
    photo = models.ImageField(upload_to='photo/%Y/%m/%d/', blank=True, verbose_name='–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–æ–±–ª–æ–∂–∫–∞)')
    create_at = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è')
    author = models.CharField(max_length=50, verbose_name='–ê–≤—Ç–æ—Ä')
    views = models.PositiveIntegerField(default=0, verbose_name='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤')
    published = models.BooleanField(default=False, verbose_name='üëÄ')
    category = models.ForeignKey(Category, on_delete=models.PROTECT, verbose_name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è')
    tags = TaggableManager()

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = '–†–µ—Ü–µ–ø—Ç'
        verbose_name_plural = '–†–µ—Ü–µ–ø—Ç—ã'

    def get_absolute_url(self):
        return reverse('recipe_view', kwargs={'recipe_slug': self.slug})


class Quote(models.Model):
    quote = models.CharField(max_length=255, verbose_name='–¶–∏—Ç–∞—Ç–∞')

    def __str__(self):
        return self.quote

    class Meta:
        verbose_name = '–¶–∏—Ç–∞—Ç–∞'
        verbose_name_plural = '–¶–∏—Ç–∞—Ç—ã'